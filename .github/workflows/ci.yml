name: 🔍 CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  GO_VERSION: '1.21'

jobs:
  # ===== コード品質チェック =====
  quality:
    name: 📋 Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🐹 Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
        
    - name: 📦 Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-quality-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-quality-
          
    - name: 🔧 Install tools
      run: |
        go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
        
    - name: 🧪 Run tests
      run: |
        go test -v -race -coverprofile=coverage.out ./...
        
    - name: 🔍 Run linting
      run: |
        golangci-lint run --timeout=5m
        
    - name: 💅 Check formatting
      run: |
        if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
          echo "Code is not properly formatted:"
          gofmt -s -l .
          exit 1
        fi
        
    - name: 📊 Upload coverage
      if: success()
      uses: actions/upload-artifact@v3
      with:
        name: coverage-report
        path: coverage.out
        retention-days: 30

  # ===== マルチプラットフォームテスト =====
  test:
    name: 🧪 Multi-Platform Tests
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        go-version: ['1.20', '1.21', '1.22']
        exclude:
          - os: windows-latest
            go-version: '1.20'
            
    runs-on: ${{ matrix.os }}
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🐹 Setup Go ${{ matrix.go-version }}
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}
        
    - name: 📦 Cache dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-${{ matrix.go-version }}-
          
    - name: 🔧 Install dependencies
      run: go mod download
      
    - name: 🏗️ Build project
      run: go build -v ./...
      
    - name: 🧪 Run tests
      run: go test -v -race ./...
      
    - name: ⚡ Run benchmarks
      run: go test -bench=. -benchmem ./...

  # ===== セキュリティスキャン =====
  security:
    name: 🔒 Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🐹 Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}
        
    - name: 🔧 Install security tools
      run: |
        go install golang.org/x/vuln/cmd/govulncheck@latest
        
    - name: 🔍 Run vulnerability check
      run: |
        govulncheck ./...